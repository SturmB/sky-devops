---
- name: Provision the droplets
  hosts: localhost
  tags:
    - droplet
    - laravel
  connection: local
  gather_facts: false

  tasks:
    - name: Ensure droplets exist
      digital_ocean_droplet:
        oauth_token: "{{ lookup('env', 'DO_API_TOKEN') }}"
        state: present
        name: "{{ item.short_name | mandatory }}-01"
        backups: yes
        private_networking: yes
        size: s-1vcpu-1gb
        image: lamp-20-04
        region: nyc3
        ipv6: yes
        ssh_keys: 28311563
        unique_name: yes
        wait: yes
        wait_timeout: 300
        tags:
          - "{{ item.short_name | mandatory }}"
      loop: "{{ do_droplets }}"
      register: droplet

    - name: Add new hosts to inventory
      add_host:
        name: "{{ item.data.droplet.name | mandatory }}"
        ansible_host: "{{ item.data.ip_address | mandatory }}"
        groups:
          - do
          - do_{{ item.item.short_name | mandatory }}
          - "{{ item.item.framework | default('static_html') }}"
        short_name: "{{ item.item.short_name | mandatory }}"
        long_name: "{{ item.item.long_name | default('') }}"
        domain: "{{ item.item.domain | mandatory }}"
        d_index: "{{ item.item.d_index | default('') }}"
        doc_root: "{{ item.item.doc_root | default('/var/www/html') }}"
      when: item.data is defined
      changed_when: false
      loop: "{{ droplet.results }}"
      loop_control:
        label: "{{ item.data.droplet.name }}"

- name: Prepare the droplets
  hosts: do
  tags: 
    - droplet
    - laravel
  remote_user: root
  gather_facts: no

  pre_tasks:
    - name: Wait up to 600 seconds for target connection to become reachable/usable
      wait_for_connection:
    
    - name: Gather Facts
      setup:

  tasks:
    - name: Ensure users are created
      include_role:
        name: weareinteractive.users

    - name: Ensure the web root is writable for the `www-data` group
      file:
        path: /var/www
        state: directory
        mode: g+w
        recurse: yes

    - name: Ensure `default.htm` is the first index file Apache looks for
      lineinfile:
        path: /etc/apache2/sites-available/000-default.conf
        state: present
        backrefs: yes
        regexp: '^(\s+DirectoryIndex)\s(index.php.*)'
        line: '\1 default.htm \2'
      when: "'do_abl' in group_names"
      notify:
        - Restart Apache
      tags:
        - abl

    - name: Ensire SSL certificates are in place
      import_tasks: ../tasks/ssl_certificate.yml

    - name: Ensure apache is installed and configured
      include_role:
        name: geerlingguy.apache

    - name: Add additional lines to the vhosts config file
      replace:
        path: /etc/apache2/sites-available/vhosts.conf
        regexp: (^\s+</Directory>)
        replace: |2
              {{ d_index }}
          \1
      when: "'do_abl' in group_names"
      notify: Restart Apache
      tags:
        - abl
        - never

    - name: Enable IPv6 nameservers
      replace:
        path: /etc/netplan/50-cloud-init.yaml
        regexp: (^\s+eth0[^#]*?)(((\d{1,3})(\.|$)){4})\n(\s+)(search[^#]*eth0)
        replace: |2-
          \1\2
          \6- 2001:4860:4860::8844
          \6- 2001:4860:4860::8888
          \6\7
        validate: netplan apply --debug %s
      notify: Restart Droplet

  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
    
    - name: Restart Droplet
      reboot:

- name: Set up for a Laravel site/app
  hosts: laravel
  tags:
    - droplet
    - laravel
    - acs
    - ays
  remote_user: root

  roles:
    - geerlingguy.composer
    - geerlingguy.nodejs

  tasks:
    - name: Ensure `php-mbstring` is installed
      apt:
        name:
          - php-mbstring
          - zip
          - unzip
          - php-zip
        state: present
        update_cache: yes
      notify: Restart Apache
    
    - name: Get info on `.env` file
      stat:
        path: /var/www/html/.env
      register: dotenv_result

    - name: Ensure production-ready `.env` file exists
      template:
        src: ../templates/acsays.env.j2
        dest: /var/www/html/.env
        owner: www-data
        group: www-data
        mode: 0664
      when: not dotenv_result.stat.exists

    - name: Ensure DocumentRoot is fixed
      replace:
        path: /etc/apache2/sites-available/vhosts.conf
        regexp: (^\s+DocumentRoot)(\s+.*)?$
        replace: '\1 "{{ doc_root }}"'
      notify: Restart Apache

  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted

- name: Set up for a Redmine app
  hosts: do_redmine
  tags:
    - droplet
    - redmine
  remote_user: root

  tasks:
    - name: Ensure necessary apt packages are installed
      apt:
        name:
          - python3-pymysql
          - redmine
          - redmine-mysql
          - libapache2-mod-passenger
        state: latest
        update_cache: yes

    - name: Ensure DB exists
      mysql_db:
        name: redmine
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
        collation: utf8mb4_0900_ai_ci

    - name: Ensure DB user exists
      mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: redmine
        state: present
        password: "{{ redmine_password }}"
        host: localhost
        priv: redmine.*:ALL

    - name: Ensure necessary apt packages are installed
      apt:
        name:
          - redmine
          - redmine-mysql
          - libapache2-mod-passenger
        state: latest
      tags:
        - never

    - name: Ensure bundler is installed
      gem:
        name: bundler
        state: latest

    - name: Ensure Passenger's Apache mod is installed
      apache2_module:
        name: passenger
        state: present

    - name: Ensure Passenger is configured for Redmine
      lineinfile:
        path: /etc/apache2/mods-available/passenger.conf
        state: present
        insertafter: ^<IfModule
        line: "  PassengerDefaultUser www-data"

    - name: Ensure web document space is symlinked
      file:
        path: /var/www/html/redmine
        src: /usr/share/redmine/public
        state: link

    - name: Add additional lines to the vhosts config file
      replace:
        path: /etc/apache2/sites-available/vhosts.conf
        regexp: (^\s+</Directory>)
        replace: |2
              RailsBaseURI /redmine
              PassengerResolveSymlinksInDocumentRoot on
          \1

    - name: Ensure Gemfile.lock exists
      copy:
        dest: /usr/share/redmine/Gemfile.lock
        content: ""
        force: no
        owner: www-data
        group: www-data

    - name: Ensure Redmine is enabled
      command:
        cmd: a2ensite vhosts.conf
        creates: /etc/apache2/sites-enabled/vhosts.conf
      notify: Restart Apache
      tags:
        - never

    - name: Ensure Redmine is using the correct database information
      template:
        src: ../templates/database.yml.j2
        dest: /etc/redmine/default/database.yml
        owner: root
        group: www-data
        mode: 0640
      notify: Restart Apache

    - name: Ensure Redmine's email settings are configured
      template:
        src: ../templates/configuration.yml.j2
        dest: /etc/redmine/default/configuration.yml
        owner: root
        group: www-data
        mode: 0644
      notify: Restart Apache
    
    - name: Ensure Redmine's restart file is touched
      copy:
        dest: /usr/share/redmine/tmp/restart.txt
        content: |
          restart
      notify: Restart Apache

  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
