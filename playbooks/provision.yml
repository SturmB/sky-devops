---
- name: Provision the droplets
  hosts: localhost
  tags:
    - droplet
    - laravel
    - acs
  connection: local
  gather_facts: false

  tasks:
    - name: Ensure droplets exist
      digital_ocean_droplet:
        oauth_token: "{{ lookup('env', 'DO_API_TOKEN') }}"
        state: present
        name: "{{ item.shortname }}-01"
        backups: yes
        private_networking: yes
        size: s-1vcpu-1gb
        image: lamp-20-04
        region: nyc3
        ipv6: yes
        ssh_keys: 28311563
        unique_name: yes
        wait: yes
        wait_timeout: 300
        tags:
          - "{{ item.shortname }}"
      loop: "{{ do_droplets }}"
      register: droplet

    - name: Add new hosts to inventory
      add_host:
        name: "{{ item.data.droplet.name }}"
        ansible_host: "{{ item.data.ip_address }}"
        groups:
          - do
          - do_{{ item.item.shortname }}
          - "{{ item.item.framework | default('static_html') }}"
        shortname: "{{ item.item.shortname }}"
        domain: "{{ item.item.domain }}"
        d_index: "{{ item.item.d_index | default('') }}"
        doc_root: "{{ item.item.doc_root | default('/var/www/html') }}"
      when: item.data is defined
      changed_when: false
      loop: "{{ droplet.results }}"
      loop_control:
        label: "{{ item.data.droplet.name }}"

- name: Prepare the droplets
  hosts: do
  tags: 
    - droplet
    - laravel
  remote_user: root
  gather_facts: no

  pre_tasks:
    - name: Wait up to 600 seconds for target connection to become reachable/usable
      wait_for_connection:
    
    - name: Gather Facts
      setup:

  tasks:
    - name: Ensure users are created
      include_role:
        name: weareinteractive.users

    - name: Ensure the web root is writable for the `www-data` group
      file:
        path: /var/www
        state: directory
        mode: g+w
        recurse: yes

    - name: Ensure `default.htm` is the first index file Apache looks for
      lineinfile:
        path: /etc/apache2/sites-available/000-default.conf
        state: present
        backrefs: yes
        regexp: '^(\s+DirectoryIndex)\s(index.php.*)'
        line: '\1 default.htm \2'
      when: "'do_abl' in group_names"
      notify:
        - Restart Apache
      tags:
        - abl

    - name: Ensure private key exists
      copy:
        src: ~/ssl/sky.key
        dest: "{{ ssl_key }}"
        owner: root
        group: root
        mode: 0600

    - name: Ensure client certificate exists
      copy:
        src: ~/ssl/cert.crt
        dest: "{{ ssl_cert_client }}"
        owner: root
        group: root
        mode: 0644

    - name: Ensure intermediate certificates exist
      copy:
        src: ~/ssl/cacerts.crt
        dest: "{{ ssl_cert_ca }}"
        owner: root
        group: root
        mode: 0644

    - name: Ensure apache is installed and configured
      include_role:
        name: geerlingguy.apache

    - name: Add additional lines to the vhosts config file
      replace:
        path: /etc/apache2/sites-available/vhosts.conf
        regexp: (^\s+</Directory>)
        replace: |2
              {{ d_index }}
          \1
      when: "'do_abl' in group_names"
      notify: Restart Apache
      tags:
        - abl
        - never

    - name: Enable IPv6 nameservers
      replace:
        path: /etc/netplan/50-cloud-init.yaml
        regexp: (^\s+eth0[^#]*?)(((\d{1,3})(\.|$)){4})\n(\s+)(search[^#]*eth0)
        replace: |2-
          \1\2
          \6- 2001:4860:4860::8844
          \6- 2001:4860:4860::8888
          \6\7
        validate: netplan apply --debug %s
      notify: Restart Droplet

  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
    
    - name: Restart Droplet
      reboot:

- name: Set up for a Laravel site/app
  hosts: laravel
  tags:
    - droplet
    - laravel
  remote_user: root

  roles:
    - geerlingguy.composer
    - geerlingguy.nodejs

  tasks:
    - name: Ensure `php-mbstring` is installed
      apt:
        name:
          - php-mbstring
          - zip
          - unzip
          - php-zip
        state: present
        update_cache: yes
      notify: Restart Apache
      tags:
        - acs
        - ays
    
    - name: Get info on `.env` file
      stat:
        path: /var/www/html/.env
      register: dotenv_result
      tags:
        - acs
        - ays

    - name: Ensure production-ready `.env` file exists
      template:
        src: ../templates/acsays.env.j2
        dest: /var/www/html/.env
        owner: www-data
        group: www-data
        mode: 0664
      when: not dotenv_result.stat.exists
      tags:
        - acs
        - ays

    - name: Ensure DocumentRoot is fixed
      replace:
        path: /etc/apache2/sites-available/vhosts.conf
        regexp: (^\s+DocumentRoot)(\s+.*)?$
        replace: '\1 "{{ doc_root }}"'
      notify: Restart Apache
      tags:
        - acs

  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
