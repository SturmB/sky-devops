---
# Droplet Config vars
ssl_key: "/etc/ssl/private/mail.skyunlimitedinc.com.key"
ssl_cert_client: "/etc/ssl/certs/mail.skyunlimitedinc.com.crt"
ssl_cert_ca: "/etc/ssl/certs/mail.skyunlimitedinc.com.chained.crt"

web_root: /var/www/html
admin_email: itdept@skyunlimitedinc.com

do_droplets:
  - short_name: aa
    domain: americanaccents.com
  - short_name: abl
    domain: autumnblazelodge.com
    d_index: DirectoryIndex default.htm index.php index.html
  - short_name: cupnapkin
    domain: cupnapkin.com
  - short_name: sky
    domain: skyunlimitedinc.com
  - short_name: acs
    long_name: American Cabin Supply
    domain: americancabin.com
    doc_root: "{{ web_root }}/public"
    framework: laravel
  - short_name: ays
    long_name: American Yacht Supply
    domain: americanyachtsupply.com
    doc_root: "{{ web_root }}/public"
    framework: laravel
  - short_name: redmine
    domain: dev.skyunlimitedinc.com
    doc_root: "{{ web_root }}/redmine"

# Database vars
db_acsays_database: "{{ vault_db_acsays_database }}"
db_schedule_database: "{{ vault_db_schedule_database }}"
db_users:
  - username: "{{ vault_web_username }}"
    password: "{{ vault_web_password }}"
    privs: "*.*:EXECUTE,SELECT,DELETE,INSERT,UPDATE"
  - username: "{{ vault_launcher_username }}"
    password: "{{ vault_launcher_password }}"
    privs: "*.*:EXECUTE,SELECT,SHOW DATABASES,SHOW VIEW,DELETE,INSERT,TRIGGER,UPDATE"
  - username: "{{ vault_migrator_username }}"
    password: "{{ vault_migrator_password }}"
    privs: "*.*:SELECT,ALTER,CREATE,CREATE VIEW,DELETE,DROP,INDEX,INSERT,REFERENCES,UPDATE"
  - username: "{{ vault_dds_username }}"
    password: "{{ vault_dds_password }}"
    privs: "*.*:EXECUTE,SELECT,DELETE,INSERT,UPDATE"
db_admin_username: "{{ vault_db_admin_username }}"
db_admin_password: "{{ vault_db_admin_password }}"

# Upgrade vars
upgrade_aa: no
upgrade_acs: no
upgrade_ays: no
upgrade_schedule: no

# Database vars
db:
  acs:
    db_name: "{{ db_acsays_database }}"
    volume: acsays-dbdata
    service: acsays-db
    port: 3326
  ays:
    db_name: "{{ db_acsays_database }}"
    volume: acsays-dbdata
    service: acsays-db
    port: 3326
  schedule:
    db_name: "{{ db_schedule_database }}"
    volume: schedule-dbdata
    service: schedule-db
    port: 3306

# Miscellaneous vars
# `recreate_containers` can be `always`, `never`, or `smart` (default).
recreate_containers: smart
pull_image: yes
work_dir: "{{ lookup('env', 'HOME') | default('~', True) }}/web"
config_dir: "{{ work_dir }}/config"

# geerlingguy.pip
pip_install_packages:
  - name: docker
  - name: docker-compose
  - name: PyMySQL
  - name: PyMySQL[rsa]
  - name: PyMySQL[ed25519]

# geerlingguy.docker
docker_users:
  - "{{ ansible_user }}"

# weareinteractive.users:
users:
  - username: "sturm"
    name: Chris McGee
    uid: 1000
    password: "{{ vault_user_password | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}"
    authorized_keys:
      - "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    home_create: yes
    home_mode: "0750"
    groups:
      - admin
      - www-data
    append: yes
    shell: /bin/bash
  - username: "deployer"
    name: Deployer
    uid: 1001
    password: ""
    authorized_keys:
      - "{{ lookup('file', '~/.ssh/deployer_ed.pub') }}"
    home_create: yes
    home_mode: "0750"
    groups:
      - admin
      - www-data
    append: yes
    shell: /bin/bash

# geerlingguy.apache
apache_global_vhost_settings: |
  DirectoryIndex default.htm index.php index.html
apache_vhosts:
  - servername: "{{ domain }}"
    serveralias: "www.{{ domain }}"
    serveradmin: "{{ admin_email }}"
    documentroot: "{{ web_root }}"
    extra_parameters: |2
      {{ d_index }}
        RewriteEngine On
        RewriteCond %{SERVER_NAME} =www.{{ domain }} [OR]
        RewriteCond %{SERVER_NAME} ={{ domain }}
        RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
apache_vhosts_ssl:
  - servername: "{{ domain }}"
    serveralias: "www.{{ domain }}"
    serveradmin: "{{ admin_email }}"
    documentroot: "{{ web_root }}"
    certificate_file: "{{ ssl_cert_client }}"
    certificate_key_file: "{{ ssl_key }}"
    certificate_chain_file: "{{ ssl_cert_ca }}"
    extra_parameters: |2
      {{ d_index }}

# geerlingguy.composer
composer_project_path: "/var/www/html"
composer_github_oauth_token: "{{ lookup('env', 'DO_API_TOKEN') }}"

# geerlingguy.php-pecl
php_pecl_extensions:
  - redis
